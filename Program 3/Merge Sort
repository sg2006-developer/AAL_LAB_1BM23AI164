#include <stdio.h>

void merge(int arr[], int low, int mid, int high) {
    int temp[high - low + 1]; 
    int left = low, right = mid + 1, k = 0,i;

    
    while (left <= mid && right <= high) {
        if (arr[left] <= arr[right]) {
            temp[k++] = arr[left++];
        } else {
            temp[k++] = arr[right++];
        }
    }

    
    while (left <= mid) {
        temp[k++] = arr[left++];
    }

    
    while (right <= high) {
        temp[k++] = arr[right++];
    }

    
    for (i = 0; i < k; i++) {
        arr[low + i] = temp[i];
    }
}

void mergeSort(int arr[], int low, int high) {
    if (low >= high) return;
    int mid = (low + high) / 2;
    mergeSort(arr, low, mid); 
    mergeSort(arr, mid + 1, high); 
    merge(arr, low, mid, high); 
}

int main() {
	int i;
    int arr[] = {7,8,5,6,3,4,2,1};
    int n = sizeof(arr) / sizeof(arr[0]);

    printf("Before Sorting Array:\n");
    for ( i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    mergeSort(arr, 0, n - 1);

    printf("After Sorting Array:\n");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}



Output:
Before Sorting Array:
7 8 5 6 3 4 2 1
After Sorting Array:
1 2 3 4 5 6 7 8
